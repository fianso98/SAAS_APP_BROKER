/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication6;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
 *
 * @author sofia
 */
public class ControlPanelClient extends javax.swing.JFrame {

    /**
     * Creates new form ControlPanelClient
     */
    DefaultTableModel mdl= new DefaultTableModel(); 
     Statement st; 
    ResultSet ss;
    String UserC,Password;
    public ControlPanelClient() {
        initComponents();
        mdl.addColumn("UserName");
        mdl.addColumn("domain");
         
       
        
    }
    public ControlPanelClient(String UserC,String Password) {
        initComponents();
        this.UserC=UserC;
        this.Password=Password;
        mdl.addColumn("UserName");
        mdl.addColumn("domain");
         
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Back = new javax.swing.JButton();
        Consult = new javax.swing.JButton();
        filter = new javax.swing.JButton();
        Filter2 = new javax.swing.JButton();
        article = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        GetFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 153));

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Consult.setText("Consult");
        Consult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultActionPerformed(evt);
            }
        });

        filter.setText("Filter");
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        Filter2.setText("Filter 2");
        Filter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Filter2ActionPerformed(evt);
            }
        });

        article.setText("MCDM");
        article.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                articleActionPerformed(evt);
            }
        });

        jButton1.setText("AHP");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Consult))
                    .addComponent(filter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Filter2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(article, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Back)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(Consult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Filter2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(article)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Back)
                .addGap(28, 28, 28))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                ""
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Fournisseur");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        GetFile.setText("Get File");
        GetFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(GetFile)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(GetFile)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    public String getDate(String User,String Domain){
        String date=null;
        try {
            ResultSet rs = null;
            String q="select DAY(fournisseur_date),MONTH(fournisseur_date),YEAR(fournisseur_date) from Fournisseur WHERE fournisseur_nom='"+User+"' and domain_nom='"+Domain +"'";
            Statement stmt = conecter().createStatement();
            rs = stmt.executeQuery(q);
            rs.next();
            date=rs.getString("DAY(fournisseur_date)")+"/"+rs.getString("MONTH(fournisseur_date)")+"/"+(rs.getString("YEAR(fournisseur_date)"));
            
                    } catch (SQLException ex) {
            Logger.getLogger(ControlPanelClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        return date;
    }
    public void asember(String Domain,String UserF,String UserC){
        
        try {
            /*  button te3 valider
            segem sql 3la 7sab database te3k
            ida l9ah chrah 9bal 90 days donc ywidlo points f database te3 client li dayerha ana integer asemha vintime
            sema ida chtah <90 days wkanet la valeur te3 vintime+1==5 ymdlo service batel + yrod vintime = 0
            ida kanet lavaleur vintime+1<5  ydir update l vintime f database ydirha vintime+1 */
            
            
            // jibli time li f fichier li khayro
            
            String time=getDate(UserF,Domain);
            ResultSet rs=null;
            Long i = Diff(time,UserF,Domain);
            //90= 3mois ida chrah w kan 3ando 9al ma 3 mois meli 7atouh lel bi3
            if(i<90){
                String qu = "SELECT points FROM client WHERE client_nom='"+UserC +"'";//  where username = asemclient li logina
                rs = st.executeQuery(qu);
                int k =rs.getInt("point");
                String q = "UPDATE Client set point = ? where client_nom ='"+UserC +"'";
                PreparedStatement Stmt = conecter().prepareStatement(q);
                if(k+1==5){
                    
                    Stmt.setInt(1,0);
                    
                    JOptionPane.showMessageDialog(null,"3ndek service batel afra7");
                    
                }else{
                    Stmt.setInt(1,k+1);
                    
                }
                Stmt.executeQuery(q);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ControlPanelClient.class.getName()).log(Level.SEVERE, null, ex);
        }
                           
       

       
    
    }

// les fonctions 
// fonction tmdlk diff te3 meli fournisseur 7ato lelbi3 w client wa9tah chrah 
// tmdelha string te3 la date li fournisseur 7at fiha service lel bi3  tmdlk ch7al 3ndo meli 7ato b days 
    
public Long Diff(String oldtime,String UserF,String Domain){
long dif=0;
 String crnttime=getDate(UserF,Domain);
DateTimeFormatter smpl= DateTimeFormatter.ofPattern("MM/dd/yy");

LocalDate curnt = LocalDate.parse(crnttime,smpl);
LocalDate old = LocalDate.parse(oldtime,smpl);
dif=ChronoUnit.DAYS.between(curnt,old);
return dif;
}
    private void ConsultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultActionPerformed
       
        try {
            List();
        } catch (SQLException ex) {
            Logger.getLogger(ControlPanelClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_ConsultActionPerformed

    private void GetFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetFileActionPerformed
        //recupirer le fichier 
        try{
            
           
        File file=new File("SW.xml");
        FileOutputStream fos=new FileOutputStream(file);
        byte b[];
        Blob blob;

        PreparedStatement ps=conecter().prepareStatement("SELECT fichier FROM fournisseur WHERE fournisseur_nom='"+mdl.getValueAt(jTable1.getSelectedRow(),0)+"' and domain_nom='"+mdl.getValueAt(jTable1.getSelectedRow(),1)+"' "); 
        ResultSet rs=ps.executeQuery();
        boolean T=false;
        while(rs.next()){
            if(rs.getBlob("fichier")==null){
                JOptionPane.showMessageDialog(null,"le fournisseur n'as pas encore déposé de fichier");
                T=false;
            }else{
            blob=rs.getBlob("fichier");
            b=blob.getBytes(1,(int)blob.length());
            fos.write(b);
            T=true;
            }
        }

        ps.close();
        fos.close();
        conecter().close();
    
          jTextArea1.setEditable(true);
          
            //lire le fichier
            if(T){
            TextView(xmlReder(file));}
            }catch(IOException e){
        } catch (SQLException ex) {
            Logger.getLogger(ControlPanelClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GetFileActionPerformed

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        dispose();
        new FilterChoise(UserC,Password).setVisible(true);
    }//GEN-LAST:event_filterActionPerformed

    private void Filter2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Filter2ActionPerformed
        dispose();
        new filter2(UserC,Password).setVisible(true);
    }//GEN-LAST:event_Filter2ActionPerformed

    private void articleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_articleActionPerformed
        dispose();
       new Article(UserC,Password).setVisible(true);
    }//GEN-LAST:event_articleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
        new AHP(UserC,Password).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        dispose();
        new CLIENT().setVisible(true);
    }//GEN-LAST:event_BackActionPerformed
   public void TextView(String line) throws FileNotFoundException, IOException{
   
                    jTextArea1.setText(null);
                    jTextArea1.append(line);
                    jTextArea1.append("\n");
          
   }

   
    public void List() throws SQLException{
     
       
      
           st=conecter().createStatement();
          String q="SELECT fournisseur_nom,domain_nom FROM fournisseur";
           ss=st.executeQuery(q);
         
            
       
         mdl.setRowCount(0);
           while(ss.next()){
          mdl.addRow(new Object[]{ss.getString(1),ss.getString(2)});}
           jTable1.setModel(mdl);
          mdl.fireTableDataChanged();
          
          //deuxiem tableau
         
         
       
        

}
    public Connection conecter() throws SQLException{
            String url="jdbc:mysql://localhost:3306/saass" ;
         String user="root";
         String pass="";
          Connection con= DriverManager.getConnection(url,user,pass);
         return con;
        }
    /**
     * @param args the command line arguments
     */
   public String xmlReder(File fXmlFile){
       String line=null;
       try {

	
	DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
	DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
	Document doc = dBuilder.parse(fXmlFile);
			
	//optional, but recommended
	//read this - http://stackoverflow.com/questions/13786607/normalization-in-dom-parsing-with-java-how-does-it-work
	doc.getDocumentElement().normalize();

	System.out.println("Root element :" + doc.getDocumentElement().getNodeName());
		NodeList nL = doc.getElementsByTagName("types");	
	NodeList nList = doc.getElementsByTagName("propriétés");
			
	System.out.println("----------------------------");

	for (int temp = 0; temp < nList.getLength(); temp++) {

		Node nNode = nList.item(temp);
				
		System.out.println("\nCurrent Element :" + nNode.getNodeName());
				
		if (nNode.getNodeType() == Node.ELEMENT_NODE) {

			Element eElement = (Element) nNode;

			line="\n réputation : " + eElement.getElementsByTagName("réputation").item(0).getTextContent()+
                                "\n confiance : " + eElement.getElementsByTagName("confiance").item(0).getTextContent()+
			"\n expérience : " + eElement.getElementsByTagName("expérience").item(0).getTextContent()+
			"\n disponibilité : " + eElement.getElementsByTagName("disponibilité").item(0).getTextContent()+
                        "\n coût : " + eElement.getElementsByTagName("coût").item(0).getTextContent()+
                        "\n temps de réponse : " + eElement.getElementsByTagName("temps_de_réponse").item(0).getTextContent()+
                        "\n risques : " + eElement.getElementsByTagName("risques").item(0).getTextContent()+
                        "\n temps moyen de représentation : " + eElement.getElementsByTagName("temps_moyen_de_représentation").item(0).getTextContent();
                        

		}
	}
    } catch (Exception e) {
	e.printStackTrace();
    }
       return line;
   }
           

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Consult;
    private javax.swing.JButton Filter2;
    private javax.swing.JButton GetFile;
    private javax.swing.JButton article;
    private javax.swing.JButton filter;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
