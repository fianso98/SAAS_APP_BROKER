/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication6;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sofia
 */
public class AdminConsultUpdate extends javax.swing.JPanel {

    /**
     * Creates new form AdminConsult
     */
    public AdminConsultUpdate() {
        initComponents();
        
        mdl.addColumn("UserName");
         mdl.addColumn("PassWord");
         md2.addColumn("Domain");
         md2.addColumn("UserName");
         md2.addColumn("PassWord");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        consult = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        delete = new javax.swing.JButton();
        jCheckBox3 = new javax.swing.JCheckBox();
        jTextField2 = new javax.swing.JTextField();

        consult.setText("Consult");
        consult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "", ""
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "", ""
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setText("Client");

        jLabel2.setText("Fournisseur");

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        jCheckBox1.setText("UserName");

        jCheckBox2.setText("PassWord");

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jCheckBox3.setText("domain");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(169, 169, 169)
                            .addComponent(jLabel2))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(203, 203, 203)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(42, 42, 42)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(79, 79, 79)
                            .addComponent(consult)
                            .addGap(18, 18, 18)
                            .addComponent(delete)
                            .addGap(18, 18, 18)
                            .addComponent(update))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(95, 95, 95)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jCheckBox1)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCheckBox3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCheckBox2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consult)
                    .addComponent(delete)
                    .addComponent(update))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    DefaultTableModel mdl= new DefaultTableModel(); 
    DefaultTableModel md2= new DefaultTableModel();
    
    Statement st; 
    ResultSet ss;
    public void List(){
     try{
       
      
           st=conecter().createStatement();
          String q="SELECT client_nom,client_password FROM client";
           ss=st.executeQuery(q);
         
            
       
         mdl.setRowCount(0);
           while(ss.next()){
          mdl.addRow(new Object[]{ss.getString(1),ss.getString(2)});}
           jTable1.setModel(mdl);
          mdl.fireTableDataChanged();
          
          //deuxiem tableau
         
          String que="SELECT domain_nom,fournisseur_nom,fournisseur_password FROM Fournisseur";
           ss=st.executeQuery(que);
         
            
       md2.setRowCount(0);
        
           while(ss.next()){
          md2.addRow(new Object[]{ss.getString(1),ss.getString(2),ss.getString(3)});
           }
          jTable2.setModel(md2);
          md2.fireTableDataChanged();
        }catch(SQLException e){JOptionPane.showMessageDialog(null,e.getMessage());}
       /** 
        try {
           Statement stmt = conecter().createStatement();
        String qu=("SELECT * FROM Account ");
        ss=st.executeQuery(qu);
         md3.addColumn("id");
         md3.addColumn("UserName");
         md3.addColumn("PassWord");
         md3.addColumn("details");
         jTable3.setModel(md3);
           while(ss.next()){
          md3.addRow(new Object[]{ss.getString(1),ss.getString(2),ss.getString(3),ss.getString(4)});
           }
          jTable3.setModel(md3); 
        while (rs.next()) {
            
        String id = rs.getString("id");
        String UserName = rs.getString("UserName");
        String PassWord = rs.getString("PassWord");
        String details = rs.getString("details");
         
        String line=" //id: "+id +" //UserName: "+UserName+" //PassWord: "+PassWord+" //details: "+details+ "\n";
        jTextArea1.append(line);
        jTextArea1.append("\n");
}
        } catch (SQLException ex) {
            Logger.getLogger(AdminControlPanel.class.getName()).log(Level.SEVERE, null, ex);}**/
        

}
    public Connection conecter() throws SQLException{
            String url="jdbc:mysql://localhost:3306/saass" ;
         String user="root";
         String pass="";
          Connection con= DriverManager.getConnection(url,user,pass);
         return con;
        }
    private void consultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultActionPerformed
        List();
    }//GEN-LAST:event_consultActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        if(jTable1.getSelectedRow() != -1){
            
            try {
                
                if(jCheckBox1.isSelected()){
                String query="UPDATE client SET client_nom=? where (client_nom=?) ";
                PreparedStatement pst = conecter().prepareStatement(query);
                
                
                pst.setString(1,jTextField1.getText() );
                
                pst.setString(2, (String) mdl.getValueAt(jTable1.getSelectedRow(),0));
              
                pst.executeUpdate();
                pst.close();
                JOptionPane.showMessageDialog(null,"UserName is updated");}
                if(jCheckBox2.isSelected()){
                String query="UPDATE client SET client_password=? where (client_nom=?) ";
                PreparedStatement pst = conecter().prepareStatement(query);
                    
                
                
                pst.setString(1,new String(jPasswordField1.getPassword()) );
                pst.setString(2, (String) mdl.getValueAt(jTable1.getSelectedRow(),0));
                pst.executeUpdate();
                pst.close();
                JOptionPane.showMessageDialog(null,"PassWord is updated");}
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,ex);
            }
            
        }
        if(jTable2.getSelectedRow() != -1){
            
            try {
                if(jCheckBox1.isSelected()){
                String query="UPDATE Fournisseur SET fournisseur_nom=? where (fournisseur_nom=?) and(domain_nom=? ) ";
                PreparedStatement pst = conecter().prepareStatement(query);
                
                
                pst.setString(1,jTextField1.getText() );
                pst.setString(3, (String) md2.getValueAt(jTable2.getSelectedRow(),0));
                pst.setString(2, (String) md2.getValueAt(jTable2.getSelectedRow(),1));
               
                pst.executeUpdate();
                pst.close();
                JOptionPane.showMessageDialog(null,"UserName is updated");}
                if(jCheckBox2.isSelected()){
                String query="UPDATE Fournisseur SET fournisseur_password=? where (fournisseur_nom=?) and(domain_nom=? )  ";
                PreparedStatement pst = conecter().prepareStatement(query);
                
                
               
                pst.setString(1,new String(jPasswordField1.getPassword()) );
                pst.setString(3, (String) md2.getValueAt(jTable2.getSelectedRow(),0));
                pst.setString(2, (String) md2.getValueAt(jTable2.getSelectedRow(),1));
                pst.executeUpdate();
                pst.close();
                JOptionPane.showMessageDialog(null,"PassWord is updated");
                }
                if(jCheckBox3.isSelected()){
                String query="UPDATE Fournisseur SET domain_nom=? where (fournisseur_nom=?) and(domain_nom=? )  ";
                PreparedStatement pst = conecter().prepareStatement(query);
                
                
               
                pst.setString(1,jTextField2.getText() );
                pst.setString(3, (String) md2.getValueAt(jTable2.getSelectedRow(),0));
                pst.setString(2, (String) md2.getValueAt(jTable2.getSelectedRow(),1));
                pst.executeUpdate();
                pst.close();
                JOptionPane.showMessageDialog(null,"domain is updated");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,ex);
            }
             
        }
        List();
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if(jTable1.getSelectedRow() != -1){
        try {
                String query="DELETE FROM Client where (client_nom=?) ";
                PreparedStatement pst = conecter().prepareStatement(query);
                
                
                
                pst.setString(1, (String) mdl.getValueAt(jTable1.getSelectedRow(),0));
                pst.executeUpdate();
                pst.close();
                JOptionPane.showMessageDialog(null," is deleted");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,ex);
            }}
         if(jTable2.getSelectedRow() != -1){
          try {
                String query="DELETE FROM Fournisseur where (fournisseur_nom=? and domain_nom=?) ";
                PreparedStatement pst = conecter().prepareStatement(query);
                
                
                
                pst.setString(2, (String) md2.getValueAt(jTable2.getSelectedRow(),0));
                pst.setString(1, (String) md2.getValueAt(jTable2.getSelectedRow(),1));
                pst.executeUpdate();
                pst.close();
                JOptionPane.showMessageDialog(null,"is deleted");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,ex);
            }}
         List();
    }//GEN-LAST:event_deleteActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        jTable2.getSelectionModel().clearSelection();
        jTextField2.setEditable(false);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        jTable1.getSelectionModel().clearSelection();
        jTextField2.setEditable(true);
    }//GEN-LAST:event_jTable2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton consult;
    private javax.swing.JButton delete;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
